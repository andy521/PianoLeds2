#!python

import platform
import components

# Create base environment
Import('base_env')
env = base_env.Clone()

# Make environment available to SConscripts
Export(base_env=env)

# Install the components module
components.install(env)

symbols = [
]
flags = [
    '-Wall',
    '-std=c++11',
    '-Os',
    '-g3',
    '-fdata-sections',
    '-ffunction-sections',
]
link_flags = [
    '-Wl,-dead_strip',
]

if platform.system() == 'Darwin':
    link_flags += [
        '-F/System/Library/Frameworks',
        '-Wl,-framework,CoreMIDI',
        '-Wl,-framework,CoreAudio',
        '-Wl,-framework,CoreFoundation',
    ]
    symbols += [
        '__MACOSX_CORE__',
    ]
else:
    raise Exception('Platform for RtMidi not configured or not supported')

env.Append(CDEFINES=symbols)
env.Append(CPPDEFINES=symbols)
env.Append(CFLAGS=flags)
env.Append(CXXFLAGS=flags)
env.Append(LINKFLAGS=link_flags)
env.Append(CPPPATH=[
    '#',
    '#/ExternalComponents',
    '#/ExternalComponents/googletest/googletest/include',
    '#/ExternalComponents/googletest/googlemock/include',
])

SConscript('Common/Common.Scons', duplicate=False)
SConscript('ExternalComponents/RtMidi.scons', duplicate=False)
SConscript('Drivers/PC.scons', duplicate=False)
SConscript('Processing/Processing.scons', duplicate=False)

# Build MidiInputMonitor test app
SConscript('MidiInputMonitor/MidiInputMonitor.scons', duplicate=False)
