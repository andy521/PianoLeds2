#!python

import os
import components

# Create base environment
Import('base_env')
env = base_env.Clone()

Export(base_env=env)

# Install the components module
components.install(env)

symbols = [
]
flags = [
    '-Wall',
    '-std=c++11',
    '-O2',
    '-g3',
    '-fdata-sections',
    '-ffunction-sections',
]
link_flags = [
    '-Wl,-dead_strip',
]

env.Append(CDEFINES=symbols)
env.Append(CPPDEFINES=symbols)
env.Append(CFLAGS=flags)
env.Append(CXXFLAGS=flags)
env.Append(LINKFLAGS=link_flags)
env.Append(CPPPATH=[
    '#',
    '#/ExternalComponents/googletest/googletest/include',
    '#/ExternalComponents/googletest/googlemock/include',
])

SConscript('ExternalComponents/GoogleTest.scons', duplicate=False)

SConscript('Common/Common.scons', duplicate=False)
SConscript('Processing/Processing.scons', duplicate=False)

test_env = env.Clone()
for path in ['Processing', 'Common']:
    test_name = path + 'Test'
    sources = Glob(path + '/Test/*.cpp')
    test_program = test_env.Program(test_name, sources + env.GetComponents(path, 'GoogleTest'))
    test_result = test_env.Command(test_name + '_result.xml', test_program, './$SOURCE --gtest_output=xml:$TARGET')
    test_env.AlwaysBuild(test_result)
